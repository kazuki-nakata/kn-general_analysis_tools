program aaa
  implicit none
  INTEGER :: i,j,k,ii,jj,kk,i2,j2,k2,i3,j3,k3      
  REAL, PARAMETER :: threshold_b= 0.4
  INTEGER, PARAMETER :: band1=3
  INTEGER, PARAMETER :: band2=4
  INTEGER(4) :: isize=30
  INTEGER(4) ::jsize=30
  INTEGER(4) ::band=4
  INTEGER(4) :: n_templ=4
  INTEGER(4):: isize_t=30
  INTEGER(4) :: jsize_t=30
  INTEGER(4) :: band_t=4
  INTEGER(4) :: num_t=1
  INTEGER(4), PARAMETER :: imax_tl=17
  INTEGER(4), PARAMETER :: jmax_tl=17
  REAL(4) :: tmp0(isize_t,jsize_t,band_t,num_t)
  REAL(4) :: tmp0(imax_tl,jmax_tl,band_t,num_t)  
  !---------
  INTEGER, PARAMETER :: octaves = 6
  INTEGER, PARAMETER :: interval = 2
  INTEGER, PARAMETER :: numpero = 3
  REAL, PARAMETER :: sigma=1
  REAL(4) :: sum,ksigma,k_int,diffmax,sf,diffmin,diff_dum
  INTEGER :: mi,mj,wsize,dum_scale,disize,djsize,n_oc,interval2,first,sum_max
  INTEGER(4) :: isize2,jsize2,isize3,jsize3,conf_index,window,diffmax_scale
  REAL(4) ::pi,dora,theta
  REAL(4) :: gain(4),offset(4),abscalfactor(4),effectivebandwidth(4)
  REAL(4) :: cal_gain,cal_offset
  character(4) :: ti
  character(512) :: dir

  tmp0(:,:,:,:)=20
  tmp(:,:,:,:)=20
  CALL ARRANGE_TEMPLATE(tmp,imax_tl,jmax_tl,band,num_t,tmp0,isize_t,jsize_t,tmp_orient)

endprogram aaa

  SUBROUTINE ARRANGE_TEMPLATE(tmpl2,isize2,jsize2,band2,n_templ,tmpl,isize,jsize,orient)
    IMPLICIT NONE
    INTEGER :: i,j,k,isize,jsize,band,ii,jj,i2,j2,l
    REAL(4):: xrate,yrate,xoffs,yoffs
  INTEGER(4),INTENT(IN) :: isize2,jsize2,band2,n_templ
  REAL(4),INTENT(IN) :: tmpl(isize,jsize,band2,n_templ)  
  REAL(4),INTENT(OUT) :: tmpl2(isize2,jsize2,band2,n_templ)
  character(512) :: infile
  REAL(4) :: gain(4),offset(4)
  REAL(4),ALLOCATABLE :: dummy(:,:,:)
  REAL(4) :: sum 
  REAL(4),INTENT(OUT) :: orient(n_templ)
  INTEGER(4),PARAMETER :: interval = 10
  REAL(4) :: hist(180/interval)
  REAL(4) :: dx,dy,pi,dora,theta,hismax,mu
  INTEGER :: itheta
  REAL(4) :: ndvi(isize2,jsize2,n_templ)  
!!$  
!!$  infile='template.tif'
!!$  infile=trim(dir)//infile  
!!$  call read_size_tif(infile,isize,jsize,band)
!!$  allocate(dummy(isize,jsize,band))
!!$  CALL open_tif(infile,dummy(:,:,:),isize,jsize,band,jsize)

  
  tmpl2(:,:,:,:)=0
  xrate=real(isize)/real(isize2)
  yrate=real(jsize)/real(jsize2)
  xoffs=(xrate+1)/2.
  yoffs=(yrate+1)/2.
  do l =1,n_templ
     do j =1,jsize2
        do i=1,isize2
           do k =1,band           
           ii=nint(xoffs+real(i-1)*xrate)
           jj=nint(yoffs+real(j-1)*yrate)
           tmpl2(i,j,k,l)=tmpl(ii,jj,k,l)
        enddo
           ndvi(i,j,l)=(tmpl2(i,j,4,l)-tmpl2(i,j,3,l))/(tmpl2(i,j,4,l)+tmpl2(i,j,3,l))
        enddo
     enddo
  enddo
  
  pi=acos(-1.)
  dora=pi/180

  do l =1,n_templ
     hist(:)=0
     do jj=2,jsize2-1
        do ii=2,isize2-1
           i2=ii
           j2=jj
           dx=ndvi(ii+1,jj,l)-ndvi(ii-1,jj,l)
           dy=ndvi(ii,jj+1,l)-ndvi(ii,jj-1,l)              
           if(dx.eq.0) cycle
           mu=dx**2+dy**2
           theta=atan(dy/dx)/dora
           if(theta.le.0) theta=theta+180
           itheta=int(theta/interval)+1
           hist(itheta)=mu+hist(itheta)
        enddo
     enddo

     hismax=0
     do ii = 1,180/interval
        hismax=max(hist(ii),hismax)
        if(hismax.eq.hist(ii)) then
           mu=ii*10-5
           if(mu.le.90) orient(l)=180.-(mu+90)
           if(mu.ge.90) orient(l)=180.-(mu-90)
        endif
     enddo

  enddo
  
END SUBROUTINE ARRANGE_TEMPLATE
